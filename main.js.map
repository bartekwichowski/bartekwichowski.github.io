{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/answer/answer.component.css","webpack:///./src/app/answer/answer.component.html","webpack:///./src/app/answer/answer.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/question-list/question-list.component.css","webpack:///./src/app/question-list/question-list.component.html","webpack:///./src/app/question-list/question-list.component.ts","webpack:///./src/app/question/question.component.css","webpack:///./src/app/question/question.component.html","webpack:///./src/app/question/question.component.ts","webpack:///./src/app/result/result.component.css","webpack:///./src/app/result/result.component.html","webpack:///./src/app/result/result.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/model/answer.ts","webpack:///./src/model/question.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"list-group-item list-group-item-action\\\" (click)=\\\"clickedAnswer()\\\" [style.background] = \\\"isChoosen() ? '#fdf7f2' : 'white'\\\">\\r\\n  {{answer.value}}\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Answer } from '../../model/answer';\r\nimport { Question } from '../../model/question';\r\n\r\n@Component({\r\n  selector: 'app-answer',\r\n  templateUrl: './answer.component.html',\r\n  styleUrls: ['./answer.component.css']\r\n})\r\nexport class AnswerComponent {\r\n\r\n  style: string;\r\n\r\n  @Input()\r\n  answer: Answer;\r\n\r\n  @Input()\r\n  question: Question;\r\n\r\n  @Output()\r\n  choosen: EventEmitter<Answer> = new EventEmitter();\r\n\r\n  constructor() { this.style = 'white'; }\r\n\r\n  isChoosen(): boolean {\r\n    return this.question.answers.includes(this.answer.id);\r\n  }\r\n\r\n  clickedAnswer() {\r\n    this.choosen.emit(this.answer);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div>\\n  <div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h3 class=\\\"display-6\\\">Quiz App</h3>\\n      <p class=\\\"lead\\\">Cure your knowledge taking medical quiz!</p>\\n    </div>\\n  </div>\\n  <app-question-list></app-question-list>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { QuestionListComponent } from './question-list/question-list.component';\r\nimport { QuestionComponent } from './question/question.component';\r\nimport { AnswerComponent } from './answer/answer.component';\r\nimport { ResultComponent } from './result/result.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    QuestionListComponent,\r\n    QuestionComponent,\r\n    AnswerComponent,\r\n    ResultComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Answer } from '../model/answer';\r\nimport { Question } from '../model/question';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  constructor() { }\r\n\r\n  getQuestions(): Question[] {\r\n    return [new Question( 1, 'Upośledzona tolerancja glukozy oznacza:'), new Question( 2, 'What is B?'), new Question( 3, 'What is C?')];\r\n  }\r\n\r\n  getAnswers(questionId: number): Answer[] {\r\n    if (questionId === 1) {\r\n      return [{'id': 1, 'value': 'This is caused by A'}, {'id': 2, 'value': 'This is caused by B'},\r\n      {'id': 3, 'value': 'This is caused by C'}];\r\n    } else if (questionId === 2) {\r\n      return [{'id': 4, 'value': 'This is caused by D'}, {'id': 5, 'value': 'This is caused by E'},\r\n      {'id': 6, 'value': 'This is caused by F'}];\r\n    }\r\n    return [{'id': 7, 'value': 'This is caused by G'}, {'id': 8, 'value': 'This is caused by H'}];\r\n  }\r\n\r\n  countProperAnswers(questions: Question[]) {\r\n    let count = 0;\r\n    for (const question of questions) {\r\n      for (const i of question.answers) {\r\n        if (i % 2 === 0) {\r\n          count++;\r\n        }\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"card\\\" *ngIf=\\\"isQuiz\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        Qustion #{{index + 1}}\\r\\n    </div>\\r\\n    <app-question [(question)]=\\\"questions[index]\\\"></app-question>\\r\\n    <div class=\\\"btn-group container\\\">\\r\\n        <button class=\\\"btn btn-light\\\" (click)=prev()>Prev</button>\\r\\n        <button class=\\\"btn btn-light\\\" (click)=next()>Next</button>\\r\\n        <button class=\\\"btn btn-light\\\" (click)=\\\"submit()\\\">Submit</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\" *ngIf=\\\"!isQuiz\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        Results\\r\\n    </div>\\r\\n    <app-result [(questions)]=\\\"questions\\\"></app-result>\\r\\n    <div class=\\\"btn-group container\\\">\\r\\n        <button class=\\\"btn btn-light\\\" (click)=\\\"reset()\\\">Reset</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, OnChanges } from '@angular/core';\r\nimport { Question } from '../../model/question';\r\nimport { DataService } from '../data.service';\r\nimport { Answer } from '../../model/answer';\r\n@Component({\r\n  selector: 'app-question-list',\r\n  templateUrl: './question-list.component.html',\r\n  styleUrls: ['./question-list.component.css']\r\n})\r\nexport class QuestionListComponent implements OnInit {\r\n\r\n  private questions: Question[] = [Question.emptyQuestion()];\r\n  private index = 0;\r\n  private isQuiz = true;\r\n  private properAnswers = 0;\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  getIndex(): number {\r\n    return this.index;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.questions = this.dataService.getQuestions();\r\n    this.shuffle(this.questions);\r\n  }\r\n\r\n  shuffle(array) {\r\n    let currentIndex = array.length, temporaryValue, randomIndex;\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n    return array;\r\n  }\r\n\r\n  prev() {\r\n    if (this.index === 0) {\r\n      this.index = this.questions.length;\r\n    }\r\n    this.index--;\r\n  }\r\n\r\n  next() {\r\n    this.index++;\r\n    this.index = this.index % this.questions.length;\r\n  }\r\n\r\n  submit() {\r\n    this.isQuiz = false;\r\n    this.properAnswers = this.dataService.countProperAnswers(this.questions);\r\n    console.log(JSON.stringify(this.questions));\r\n  }\r\n\r\n  reset() {\r\n    this.properAnswers = 0;\r\n    this.isQuiz = true;\r\n    for (const question of this.questions) {\r\n      question.answers = [];\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"card-body\\\">\\r\\n  <h5 class=\\\"card-title\\\">{{question.question}}</h5>\\r\\n  <div class=\\\"list-group\\\" *ngFor=\\\"let answer of answers\\\">\\r\\n    <app-answer [answer]=\\\"answer\\\" [(question)]=\\\"question\\\" (choosen)=\\\"setAnswer($event)\\\"></app-answer>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output, OnChanges } from '@angular/core';\r\nimport { Question } from './../../model/question';\r\nimport { Answer } from '../../model/answer';\r\nimport { DataService } from '../data.service';\r\n@Component({\r\n  selector: 'app-question',\r\n  templateUrl: './question.component.html',\r\n  styleUrls: ['./question.component.css']\r\n})\r\nexport class QuestionComponent implements OnInit, OnChanges {\r\n\r\n  @Input()\r\n  private question: Question;\r\n\r\n  private answers: Answer[];\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    this.answers = this.dataService.getAnswers(this.question.id);\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.answers = this.dataService.getAnswers(this.question.id);\r\n  }\r\n\r\n  setAnswer(answer) {\r\n    if (this.question.answers.includes(answer.id)) {\r\n      const index = this.question.answers.indexOf(answer.id, 0);\r\n      if (index > -1) {\r\n        this.question.answers.splice(index, 1);\r\n      }\r\n    } else {\r\n      this.question.answers.push(answer.id);\r\n    }\r\n\r\n    this.question.answers.forEach((item) => {\r\n      console.log(item);\r\n    });\r\n  }\r\n\r\n  isChoosen(answer): boolean {\r\n    return this.question.answers.includes(answer.id);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"list-group-item list-group-item-action\\\" >\\r\\n  <p>\\r\\n      There was {{properAnswers}} of 3 questions.\\r\\n  </p>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Question } from '../../model/question';\r\nimport { DataService } from '../data.service';\r\n\r\n@Component({\r\n  selector: 'app-result',\r\n  templateUrl: './result.component.html',\r\n  styleUrls: ['./result.component.css']\r\n})\r\nexport class ResultComponent implements OnInit {\r\n\r\n  @Input()\r\n  private questions: Question[];\r\n  private properAnswers = 0;\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    this.properAnswers = this.dataService.countProperAnswers(this.questions);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","export class Answer {\r\n    id: number;\r\n    value: string;\r\n}\r\n","import { Answer } from '../model/answer';\r\n\r\nexport class Question {\r\n  id: number;\r\n  question: string;\r\n  answers: number[] = [];\r\n\r\n  constructor(id: number, question: string) {\r\n    this.id = id;\r\n    this.question = question;\r\n  }\r\n\r\n  static emptyQuestion(): Question {\r\n    return new Question(1, null);\r\n  }\r\n}\r\n"],"sourceRoot":""}